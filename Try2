//The rows and columns of the 8x8 LED matrix
const int row[8] = {10, 18, 9, 13, 2, 8, 3, 6};
const int col[8] = {19, 4, 5, 11, 7, 12, 17, 16};

//Letters that will form the title screen of SNAKE
int titleScreen[5][8][8] = {
{ 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 0, 0, 0, 1, 0, 0}, 
{0, 0, 0, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}},
{
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{ 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 1, 0, 0, 0}, 
{0, 0, 1, 1, 0, 0, 0, 0}, 
{0, 0, 1, 1, 0, 0, 0, 0}, 
{0, 0, 1, 0, 1, 0, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{ 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}}};

int startButton = 0;
int gameState = 0;  //0 = start screen, 1 = game, 2 = game over

int snakex = 3;
int snakey = 2;   //Where (0, 0) is top left corner

int prevCoord[64][2];

int gameScreen[8][8]{
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}, 
{0, 0, 0, 0, 0, 0, 0, 0}
};

int snakeSize = 5;

void setup() {
  Serial.begin(9600);

  //set up all the pins
  for (int pin = 0; pin < 8; pin++){
    pinMode(row[pin], OUTPUT);
    pinMode(col[pin], OUTPUT);

    //turn all LEDs off
    digitalWrite(row[pin], LOW);
    digitalWrite(col[pin], LOW);
  }

  pinMode(startButton, INPUT_PULLUP);

}


void loop() {
  for (int letter = 0; letter < 5; letter++){   //change displayed letter
    for (int refreshRate = 0; refreshRate < 400; refreshRate++){  //refresh the game every 400 milliseconds
      if (gameState == 0) {                     //if on the title screen
        printLetter(letter);                    //show the letters of SNAKE
      }

      if (gameState == 1) {
        generateSnake();
      }
    }
    //if (gameState == 1){
    varTest();
    //}
  }
}

void printLetter(int letter) {
  for (int rows = 0; rows < 8; rows++){
    for (int cols = 0; cols < 8; cols++){
      if (gameState == 0){                      //if the game hasn't started
        digitalWrite(row[rows], HIGH);          //show the letters
        digitalWrite(col[cols], !(titleScreen[letter][rows][cols]));
        digitalWrite(row[rows], LOW);
        digitalWrite(col[cols], HIGH);

        checkStartGameP1();                     //see if the button has been pressed
      }
    }
  }
}

void checkStartGameP1(){
  if (digitalRead(startButton) == LOW){         //Check when the button has been pressed
    //if (gameState == 0){                        //On the title screen
      gameState = 1;                            //  Makes the game start
    //}
  }
}

void generateSnake(){
  //gameScreen[snakex][snakey] = 1;
  prevCoord[0][1] = snakex;
  prevCoord[0][2] = snakey;
  for (int refresh = 64; refresh > snakeSize; refresh--){
    prevCoord[refresh][1] = prevCoord[refresh - 1][1];
    prevCoord[refresh][2] = prevCoord[refresh - 1][2];
    //prevCoord[snakeSize + 1][1] = 0;
    //prevCoord[snakeSize + 1][2] = 0;
  }
  for (int snakeMove = 0; snakeMove < 64; snakeMove++){
    gameScreen[prevCoord[snakeMove][1]][prevCoord[snakeMove][2]] = 1;
  }

  gameScreen[prevCoord[snakeSize + 1][1]][prevCoord[snakeSize + 1][2]] = 0;
  for (int rows = 0; rows < 8; rows++){
    for (int cols = 0; cols < 8; cols++){
      digitalWrite(row[rows], HIGH);
      digitalWrite(col[cols], !(gameScreen[rows][cols]));
      digitalWrite(row[rows], LOW);
      digitalWrite(col[cols], HIGH);
    }
  }
}

void varTest(){
  if (snakex < 7){
    snakex++;
  }else{
    snakex = 0;
    if (snakey < 7){
      snakey++;
    }else{
      snakey = 0;
    };
  };
}
