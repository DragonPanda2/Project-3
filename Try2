//The rows and columns of the 8x8 LED matrix
const int row[8] = {10, 18, 9, 13, 2, 8, 3, 6};
const int col[8] = {19, 4, 5, 11, 7, 12, 17, 16};

//Letters that will form the title screen of SNAKE
int titleScreen[5][8][8] = {
{ 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 0, 0, 0, 1, 0, 0}, 
{0, 0, 0, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}},
{
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 1, 0, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{ 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 1, 0, 0, 0}, 
{0, 0, 1, 1, 0, 0, 0, 0}, 
{0, 0, 1, 1, 0, 0, 0, 0}, 
{0, 0, 1, 0, 1, 0, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}, 
{0, 0, 1, 0, 0, 1, 0, 0}},
{ 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 0, 0, 0, 0, 0}, 
{0, 0, 1, 1, 1, 1, 0, 0}}};

int startButton = 0;
int gameState = 0;  //0 = start screen, 1 = game, 2 = game over

int snakex[64] = 3;
int snakey[64] = 3;

int snakeSize = 1;

void setup() {
  Serial.begin(9600);

  //set up all the pins
  for (int pin = 0; pin < 8; pin++){
    pinMode(row[pin], OUTPUT);
    pinMode(col[pin], OUTPUT);

    //turn all LEDs off
    digitalWrite(row[pin], LOW);
    digitalWrite(col[pin], LOW);
  }

  pinMode(startButton, INPUT_PULLUP);
}


void loop() {
  for (int letter = 0; letter < 5; letter++){   //change displayed letter
    for (int timer = 0; timer < 400; timer++){  //play each letter for 1 second
      if (gameState == 0) {                     //if on the title screen
        printLetter(letter);                    //show the letters of SNAKE
      }
    }
    
  }
}

void printLetter(int letter) {
  for (int rows = 0; rows < 8; rows++){
    for (int cols = 0; cols < 8; cols++){
      if (gameState == 0){                      //if the game hasn't started
        digitalWrite(row[rows], HIGH);          //show the letters
        digitalWrite(col[cols], !(titleScreen[letter][rows][cols]));
        digitalWrite(row[rows], LOW);
        digitalWrite(col[cols], HIGH);

        checkStartGameP1();                     //see if the button has been pressed
      }
    }
  }
}

void checkStartGameP1(){
  if (digitalRead(startButton) == LOW){         //Check when the button has been pressed
    if (gameState == 0){                        //On the title screen
      gameState = 1;                            //  Makes the game start
    }
  }
}

void generateSnake(){
  for (int rows = 0; rows < snakeSize; rows++){
    for (int cols = 0; cols < snakeSize; cols++){

    }
  }
}
